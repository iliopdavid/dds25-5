David: Built the saga workflow using synchronous choreography, handled compensation logic for checkout failures, and added Redis transaction safety with pipelines and - with help from Stan - optimistic locking (Fortunately no cookies from me because I'm so bad at cooking).
Mike: Worked on the general work flow of the code, spent most of my time trying to implement grpc to improve the speed of the system, where I did finish the logic off (can be found in a separate branch/pull request) but ran out of time to fully integrate it due to other points having more priority to be solved/implemented, so I also helped out with the debugging of the remaining inconsistencies. 
Kanta: Rewrote the services into Quart, implemented the whole asynchronous RabbitMQ workflow from scratch to achieve no inconsistencies with pub/sub for checkout responses and lua scripts for ensuring atomic transactions, as well as general help with debugging and final testings with Stan  (and a lot of hours spent on trying to configure Kafka to work in the first place and failing miserably)
Stan: Implemented fail safety by using redo logging, helped to fix inconsistencies that where caused by the saga logic, oversaw general code quality on the main branch.
